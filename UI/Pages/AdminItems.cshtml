@page
@model AdminItemsModel
@{
    ViewData["Title"] = "Admin Item Management";
}

<div class="container">
    <h1 class="my-4">Item Management</h1>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="mb-3">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addItemModal">
            Add New Item
        </button>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>Price</th>
                <th>Stock Quantity</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Price</td>
                    <td>@item.StockQuantity</td>
                    <td>
                        @{
                            var categoryName = Model.Categories
                            .FirstOrDefault(c => c.IDItemCategory == item.ItemCategoryID)?.CategoryName;
                        }
                        @categoryName
                    </td>
                    <td>
                        <button type="button" class="btn btn-warning btn-sm edit-button"
                                data-bs-toggle="modal"
                                data-bs-target="#editItemModal"
                                data-id="@item.IDItem"
                                data-title="@item.Title"
                                data-price="@item.Price.ToString("0.00")"
                                data-stock="@item.StockQuantity"
                                data-description="@item.Description"
                                data-category="@item.ItemCategoryID">
                            Edit
                        </button>

                        <form method="post" class="d-inline" asp-page-handler="Delete"
                              onsubmit="return confirm('Are you sure you want to delete this item?');">
                            <input type="hidden" name="ItemId" value="@item.IDItem" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade" id="addItemModal" tabindex="-1" aria-labelledby="addItemModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addItemModalLabel">Add New Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="Add">
                        <div class="mb-3">
                            <label asp-for="Item.Title" class="form-label">Title</label>
                            <input asp-for="Item.Title" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label asp-for="Item.Price" class="form-label">Price</label>
                            <input asp-for="Item.Price" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label asp-for="Item.StockQuantity" class="form-label">Stock Quantity</label>
                            <input asp-for="Item.StockQuantity" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label asp-for="Item.Description" class="form-label">Description</label>
                            <textarea asp-for="Item.Description" class="form-control"></textarea>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Item.ItemCategoryID" class="form-label">Category</label>
                            <select asp-for="Item.ItemCategoryID" class="form-control" required>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.IDItemCategory">@category.CategoryName</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Item</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editItemModal" tabindex="-1" aria-labelledby="editItemModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editItemModalLabel">Edit Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="Edit">
                        <input type="hidden" id="EditID" name="Item.IDItem" />
                        <div class="mb-3">
                            <label for="EditTitle" class="form-label">Title</label>
                            <input type="text" class="form-control" id="EditTitle" name="Item.Title" required />
                        </div>
                        <div class="mb-3">
                            <label for="EditPrice" class="form-label">Price</label>
                            <input type="text" step="0.01" class="form-control" id="EditPrice" name="Item.Price" required />
                        </div>
                        <div class="mb-3">
                            <label for="EditStockQuantity" class="form-label">Stock Quantity</label>
                            <input type="number" class="form-control" id="EditStockQuantity" name="Item.StockQuantity" required />
                        </div>
                        <div class="mb-3">
                            <label for="EditDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="EditDescription" name="Item.Description"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="EditItemCategoryID" class="form-label">Category</label>
                            <select class="form-control" id="EditItemCategoryID" name="Item.ItemCategoryID" required>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.IDItemCategory">@category.CategoryName</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var editButtons = document.querySelectorAll('.edit-button');
            editButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var id = this.getAttribute('data-id');
                    var title = this.getAttribute('data-title');
                    var price = this.getAttribute('data-price')
                    var stock = this.getAttribute('data-stock');
                    var description = this.getAttribute('data-description');
                    var category = this.getAttribute('data-category');

                    document.getElementById('EditID').value = id;
                    document.getElementById('EditTitle').value = title;
                    document.getElementById('EditPrice').value = price;
                    document.getElementById('EditStockQuantity').value = stock;
                    document.getElementById('EditDescription').value = description;
                    document.getElementById('EditItemCategoryID').value = category;
                });
            });
        });
    </script>
}