// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace webshopAPI.Models;

public partial class webshopdbContext : DbContext
{
    public webshopdbContext(DbContextOptions<webshopdbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<CartItem> CartItems { get; set; }

    public virtual DbSet<Item> Items { get; set; }

    public virtual DbSet<ItemCategory> ItemCategories { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderItem> OrderItems { get; set; }

    public virtual DbSet<Status> Statuses { get; set; }

    public virtual DbSet<Tag> Tags { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.IDCart).HasName("PK__Cart__43A2A4D2D698D780");

            entity.HasOne(d => d.User).WithMany(p => p.Carts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart__UserID__3D5E1FD2");
        });

        modelBuilder.Entity<CartItem>(entity =>
        {
            entity.HasKey(e => e.IDCartItem).HasName("PK__CartItem__388D28A09D7D8A98");

            entity.HasOne(d => d.Cart).WithMany(p => p.CartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CartItem__CartID__403A8C7D");

            entity.HasOne(d => d.Item).WithMany(p => p.CartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CartItem__ItemID__412EB0B6");
        });

        modelBuilder.Entity<Item>(entity =>
        {
            entity.HasKey(e => e.IDItem).HasName("PK__Item__C9778A10DB8C136E");

            entity.HasOne(d => d.ItemCategory).WithMany(p => p.Items)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Item__ItemCatego__2E1BDC42");

            entity.HasOne(d => d.Tag).WithMany(p => p.Items).HasConstraintName("FK__Item__TagID__2F10007B");
        });

        modelBuilder.Entity<ItemCategory>(entity =>
        {
            entity.HasKey(e => e.IDItemCategory).HasName("PK__ItemCate__00EDF652B6B0864E");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.IDOrder).HasName("PK__Order__5CBBCADB459AD47B");

            entity.Property(e => e.OrderDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Status).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__StatusID__34C8D9D1");

            entity.HasOne(d => d.User).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__UserID__33D4B598");
        });

        modelBuilder.Entity<OrderItem>(entity =>
        {
            entity.HasKey(e => e.IDOrderItem).HasName("PK__OrderIte__C1C25E90F34FB793");

            entity.HasOne(d => d.Item).WithMany(p => p.OrderItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderItem__ItemI__398D8EEE");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderItem__Order__38996AB5");
        });

        modelBuilder.Entity<Status>(entity =>
        {
            entity.HasKey(e => e.IDStatus).HasName("PK__Status__8DA245104C5A97EF");
        });

        modelBuilder.Entity<Tag>(entity =>
        {
            entity.HasKey(e => e.IDTag).HasName("PK__Tag__A70237514DF5ECE2");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.IDUser).HasName("PK__User__EAE6D9DF3CD0A30E");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}